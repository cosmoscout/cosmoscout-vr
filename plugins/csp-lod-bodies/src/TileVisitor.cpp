////////////////////////////////////////////////////////////////////////////////////////////////////
//                               This file is part of CosmoScout VR                               //
////////////////////////////////////////////////////////////////////////////////////////////////////

// SPDX-FileCopyrightText: German Aerospace Center (DLR) <cosmoscout@dlr.de>
// SPDX-License-Identifier: MIT

#include "TileVisitor.hpp"

#include "HEALPix.hpp"
#include "TileId.hpp"
#include "TileQuadTree.hpp"

namespace csp::lodbodies {

////////////////////////////////////////////////////////////////////////////////////////////////////

TileVisitor::TileVisitor(TileQuadTree* tree)
    : mTree(tree) {
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::visit() {
  if (preTraverse()) {
    for (int i = 0; i < TileQuadTree::sNumRoots; ++i) {
      TileNode* root = mTree->getRoot(i);
      visitRoot(root);
    }
  }

  postTraverse();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::visitRoot(TileNode* root) {

  if (preVisitRoot(root)) {
    for (int i = 0; i < 4; ++i) {
      TileNode* child = root ? root->getChild(i) : nullptr;

      if (child) {
        visitLevel(child);
      }
    }
  }

  postVisitRoot(root);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::visitLevel(TileNode* node) {
  if (preVisit(node)) {
    for (int i = 0; i < 4; ++i) {
      TileNode* child = node ? node->getChild(i) : nullptr;

      if (child) {
        visitLevel(child);
      }
    }
  }

  postVisit(node);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

bool TileVisitor::preTraverse() {
  // default impl - start traversal
  return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::postTraverse() {
  // default impl - empty
}

////////////////////////////////////////////////////////////////////////////////////////////////////

bool TileVisitor::preVisitRoot(TileNode* /*root*/) {
  // default impl - do not visit children
  return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::postVisitRoot(TileNode* /*root*/) {
  // default impl - empty
}

////////////////////////////////////////////////////////////////////////////////////////////////////

bool TileVisitor::preVisit(TileNode* /*node*/) {
  // default impl - do not visit children
  return false;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileVisitor::postVisit(TileNode* /*node*/) {
  // default impl - empty
}

////////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace csp::lodbodies
